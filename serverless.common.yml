custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or falls back to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  spentAppMapping:
    prod: prod
    dev: dev
  userPoolId: ap-southeast-1_5BfiF60iL
  userPoolArn: arn:aws:cognito-idp:ap-southeast-1:268400237357:userpool/ap-southeast-1_5BfiF60iL
  spentApp: spent-resources-${self:custom.spentAppMapping.${self:custom.stage}, self:custom.spentAppMapping.dev}
  authorizerArn: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:spent-service-auth-dev-auth
  authorizer:
    arn: ${self:custom.authorizerArn}
    managedExternally: false
    resultTtlInSeconds: 0
    identitySource: method.request.header.Authorization
  bundle:
    linting: false

lambdaPolicyXRay:
  Effect: Allow
  Action:
    - xray:PutTraceSegments
    - xray:PutTelemetryRecords
  Resource: '*'
