service: spent-service-template

frameworkVersion: '2'

plugins:
  # serverless reserve $ then use pseudo to interpolate # -> $
  - serverless-pseudo-parameters
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-iam-roles-per-function
  - serverless-dotenv-plugin

package:
  individually: true

# custom:
#   stage: ${file(../../serverless.common.yml):custom.stage}
#   spentApp: ${file(../../serverless.common.yml):custom.spentApp}
#   spentAppMapping: ${file(../../serverless.common.yml):custom.spentAppMapping}

custom: ${file(../../serverless.common.yml):custom}

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-1
  tracing:
    apiGateway: true
    lambda: true
  apiGateway:
    restApiId: !ImportValue ${self:custom.stage}-ExtApiGatewayRestApiId
    restApiRootResourceId: !ImportValue ${self:custom.stage}-ExtApiGatewayRestApiRootResourceId
  iamRoleStatements:
    - ${file(../../serverless.common.yml):lambdaPolicyXRay}

functions:
  hello:
    handler: src/handlers/hello.handler
    events:
      - http:
          method: GET
          path: feed/hello
          authorizer: ${self:custom.authorizer}
