service: spent-service-user

frameworkVersion: '2'

plugins:
  # serverless reserve $ then use pseudo to interpolate # -> $
  - serverless-pseudo-parameters
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-iam-roles-per-function
  # - serverless-dotenv-plugin
  # - serverless-layers

package:
  individually: true

custom:
  stage: ${file(../../serverless.common.yml):custom.stage}
  spentApp: ${file(../../serverless.common.yml):custom.spentApp}
  spentAppMapping: ${file(../../serverless.common.yml):custom.spentAppMapping}
  userTable:
    name: ${file(../../serverless.common.yml):custom.dynamodb.userTable.name}
    arn: ${file(../../serverless.common.yml):custom.dynamodb.userTable.arn}

  # serverless-layers:
  #   functions: # optional
  #     - hello
  #   dependenciesPath: ./package.json

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-1
  tracing:
    apiGateway: true
    lambda: true
  apiGateway:
    restApiId: !ImportValue ${self:custom.stage}-ExtApiGatewayRestApiId
    restApiRootResourceId: !ImportValue ${self:custom.stage}-ExtApiGatewayRestApiRootResourceId
  environment:
    USER_TABLE_NAME: ${self:custom.userTable.name}
  iamRoleStatements:
    - ${file(../../serverless.common.yml):lambdaPolicyXRay}
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: ${self:custom.userTable.arn}

functions:
  get:
    handler: src/handlers/get.handler
    events:
      - http:
          method: GET
          path: users/{id}
          authorizer: aws_iam

  list:
    handler: src/handlers/list.handler
    events:
      - http:
          method: GET
          path: users
          authorizer: aws_iam
# resources:
# - Outputs:
#   UserServiceArn:
#     Value:
#       Ref: UserService
#     Export:
#       Name: ${self:custom.stage}-ExtUserServiceArn
